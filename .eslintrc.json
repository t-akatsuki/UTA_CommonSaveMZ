{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "sourceType": "script"
    },
    "plugins": [
        "@typescript-eslint"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended",
        "prettier/@typescript-eslint"
    ],
    "env": {
        "browser": true,
        "node": true
    },
    "rules": {
        /**
         *ESLint rules
         * https://eslint.org/docs/rules/
         */
        // varを利用してもエラーとしないように
        "no-var": "off",
        // 括弧内のスペースを強要しないように
        "space-in-parens": ["error", "never"],
        // スプレット構文を強要しない
        "prefer-spread": "off",
        // キーワードの直後にスペースを強要しない
        "space-after-keywords": "off",
        // 関数呼び出しの関数名と括弧の間にスペースを強要しない
        "func-call-spacing": ["error", "never"],
        /**
         * typescript-eslint rules
         * https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin/docs/rules
         */
        // namespaceの使用を許可する
        "@typescript-eslint/no-namespace": "off",
        // 文字列などの定義時は明示的な型注釈を付けた場合に警告とする
        "@typescript-eslint/no-inferrable-types": "warn",
        // 未使用の変数はエラーとしたいがnamespaceと相性が悪い
        // トランスパイル時にもチェックするのでそちらに委ねる
        "@typescript-eslint/no-unused-vars": "off",
        // any型の利用を禁止しない
        "@typescript-eslint/no-explicit-any": "off",
        // トリプルスラッシュ特殊コメントでパス参照は許可
        "@typescript-eslint/triple-slash-reference": 0,
        /**
         * Prettier rules
         * https://prettier.io/docs/en/options.html
         */
         "prettier/prettier": [
            "error",
            {
                // インデントにtabを利用するか
                "useTabs": false,
                // 1インデントのスペースの数
                "tabWidth": 4,
                // 行の終わりにセミコロンを必要とするか
                "semi": true,
                // 1行の最大文字数
                "printWidth": 320,
                // ダブルクォートの代わりにシングルクォートを利用するか
                "singleQuote": false,
                // オブジェクトのプロパティに用いるクォート
                // preserve: クォート利用を推奨する
                "quoteProps": "preserve",
                // オブジェクトや配列における複数行記述の際のカンマ則
                "trailingComma": "none",
                // {}にスペースを必要とするか
                "bracketSpacing": true,
                // アロー関数で括弧を必要とするか
                "arrowParens": "always",
                // pragma commentを付けたもののみに制限するか
                "requirePragma": false,
                // pragma commentを挿入するか
                "insertPragma": false,
                // 改行コードの指定
                "endOfLine": "auto"
            }
        ]
    }
}
